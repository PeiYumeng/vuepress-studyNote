(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{397:function(t,s,e){t.exports=e.p+"assets/img/aaa.1319e784.jpg"},398:function(t,s,e){t.exports=e.p+"assets/img/jichu-get.ef8e7ceb.jpg"},399:function(t,s,e){t.exports=e.p+"assets/img/jichu-post.78077003.png"},400:function(t,s,e){t.exports=e.p+"assets/img/jichu-luyou.28fa1ddc.png"},401:function(t,s,e){t.exports=e.p+"assets/img/jichu-pacjkjson.ddb31790.png"},402:function(t,s,e){t.exports=e.p+"assets/img/jichu.dc84a434.png"},403:function(t,s,e){t.exports=e.p+"assets/img/jiekou.16c7edd8.png"},448:function(t,s,e){"use strict";e.r(s);var o=e(54),v=Object(o.a)({},(function(){var t=this,s=t.$createElement,o=t._self._c||s;return o("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[o("p",[t._v("一、基本概念")]),t._v(" "),o("p",[o("strong",[t._v("1.Nodejs是一个js的运行环境")]),t._v("，可以运行在服务器作为webserver，也可以运行在本地，作为打包、构建工具")]),t._v(" "),o("ol",{attrs:{start:"2"}},[o("li",[t._v("nodejs. vs  js")])]),t._v(" "),o("ul",[o("li",[t._v("ECMAScript(es)  定义了语法，包括定义变量、循环判断、原型异步等，是写js和nodejs都要遵守的;但不能操作dom\\http请求")]),t._v(" "),o("li",[t._v("js   es+web Api(w3c)")]),t._v(" "),o("li",[t._v("nodejs    es+nodeApi")])]),t._v(" "),o("ol",{attrs:{start:"3"}},[o("li",[t._v("common js")])]),t._v(" "),o("p",[t._v("commonjs是node默认的模块化规范：导出modules.export.  导入require")]),t._v(" "),o("ol",{attrs:{start:"4"}},[o("li",[o("p",[t._v("基本用法\n"),o("img",{attrs:{src:e(397),alt:"avatar"}})])]),t._v(" "),o("li",[o("p",[t._v("nodejs基于inspect协议的调试方式")])])]),t._v(" "),o("p",[t._v("在谷歌浏览器中调试通断点等待：1.设置默认端口9229  2.打开谷歌浏览器的inspect窗口")]),t._v(" "),o("p",[t._v("Node v6.3+ 的版本提供了两个用于调试的协议：v8 Debugger Protocol 和 v8 Inspector Protocol")]),t._v(" "),o("blockquote",[o("p",[t._v("v8 Debugger Protocol 是 Node v6.3 之前的版本就支持的调试协议，使用一个 TCP 端口（通常是 5858）与Client/IDE 交互，其工作原理如下：")]),t._v(" "),o("ol",[o("li",[o("p",[t._v("使用 node --debug=5858 yourScript.js 启动你的 js 脚本，则 node 在运行脚本时会将 5858 作为调试端口")])]),t._v(" "),o("li",[o("p",[t._v("启动 node-inspector，它会开启一个后台进程，通过 8080 端口提供 http 服务。")])]),t._v(" "),o("li",[o("p",[t._v("在浏览器中打开 http://127.0.0.1:8080/?port=5858]则会连接到 node-inspector 后台进程，同时告诉后台连接使用 5858 作为调试端口的 node 进程。后台会提供一个类似于 chrome devtools 的 UI 调试界面。")])])]),t._v(" "),o("p",[t._v("（访问8080，5858是一个调试的端口，后台调试）")]),t._v(" "),o("p",[t._v("v8 Inspector Protocol 是 node v6.3 新加入的调试协议，通过 websocket （通常使用 9229 端口）与 Client/IDE 交互，同时基于 Chrome/Chromium 浏览器的 devtools 提供了图形化的调试界面。")]),t._v(" "),o("ol",[o("li",[o("p",[t._v("使用 node --inspect=9229 yourScript.js 启动你的脚本，9229 是指定的端口号")])]),t._v(" "),o("li",[o("p",[t._v("在地址栏输入 chrome://inspect/#devices")])])]),t._v(" "),o("p",[t._v("（即可在浏览器调试）")])]),t._v(" "),o("p",[t._v("在谷歌浏览器中调试")]),t._v(" "),o("ol",{attrs:{start:"6"}},[o("li",[t._v("http请求概述")])]),t._v(" "),o("p",[t._v("DNS解析域名，建立TCP连接，发送http请求 -> server接收到http请求后处理并返回、客户端收到数据处理并渲染")]),t._v(" "),o("ol",{attrs:{start:"7"}},[o("li",[t._v("nodejs处理http请求")])]),t._v(" "),o("ul",[o("li",[t._v("get请求通过querystring传递数据")])]),t._v(" "),o("p",[o("img",{attrs:{src:e(398),alt:"avatar"}})]),t._v(" "),o("p",[t._v("服务端通过query string.parse解析成一个对象")]),t._v(" "),o("p",[t._v("res返回时需要返回字符串，所以需要JSON.stringify封装一下")]),t._v(" "),o("ul",[o("li",[t._v("post请求")])]),t._v(" "),o("p",[o("img",{attrs:{src:e(399),alt:"image-20211207102643945"}})]),t._v(" "),o("ul",[o("li",[t._v("处理路由")])]),t._v(" "),o("img",{staticStyle:{zoom:"30%"},attrs:{src:e(400),alt:"image-20211207102830441"}}),t._v(" "),o("ul",[o("li",[t._v("设置返回格式为 JSON")])]),t._v(" "),o("p",[t._v("​    res.setHeader('Content-type', 'application/json') 【纯文本\"Content-type\":'text/plain'】")]),t._v(" "),o("ol",{attrs:{start:"8"}},[o("li",[t._v("搭建开发环境")])]),t._v(" "),o("p",[t._v("使用nodemon检测文件变化，自动重启node")]),t._v(" "),o("p",[t._v("使用cross-env设置环境变量，兼容mac linux windos")]),t._v(" "),o("p",[t._v("可以通过设置环境变量区分是生产环境还是线上环境，从而走不同的日志和数据库")]),t._v(" "),o("p",[t._v("安装生产环境依赖npm install nodemon cross-env --save-dev")]),t._v(" "),o("img",{staticStyle:{zoom:"50%"},attrs:{src:e(401),alt:"image-20211207105844443"}}),t._v(" "),o("p",[t._v("搭建之后的基本代码")]),t._v(" "),o("p",[o("img",{attrs:{src:e(402),alt:"image-20211207115426559"}})]),t._v(" "),o("p",[t._v("部分接口")]),t._v(" "),o("img",{staticStyle:{zoom:"50%"},attrs:{src:e(403),alt:"image-20211207115509783"}})])}),[],!1,null,null,null);s.default=v.exports}}]);
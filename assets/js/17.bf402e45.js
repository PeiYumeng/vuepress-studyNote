(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{431:function(t,s,a){t.exports=a.p+"assets/img/1.ce4be499.png"},432:function(t,s,a){t.exports=a.p+"assets/img/2.dc98278b.png"},467:function(t,s,a){"use strict";a.r(s);var n=a(54),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("ol",[n("li",[t._v("前端优化可以从哪些方面进行"),n("br"),t._v(" "),n("strong",[t._v("【多使用内存、缓存，减少CPU计算量，减少网络加载耗时】")])])]),t._v(" "),n("ul",[n("li",[t._v("DOM性能优化：1️⃣对DOM查询做缓存 2️⃣将频繁操作改为一次性操作（创建文档碎片最后插入到DOM中）")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" listNode "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'list'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" frag "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createDocumentFragment")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" li "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'li'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  frag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("li"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nistNode"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("frag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("ul",[n("li",[t._v("为了减少网络请求进行资源合并、压缩代码")]),t._v(" "),n("li",[t._v("缓存,打包的时候使用[contenthash]"),n("br"),t._v("\n静态资源加hash后缀，根据文件内容计算hash，文件内容不变则hash不变，则url不变，url和文件不变则会自动触发http缓存机制返回304")]),t._v(" "),n("li",[t._v("CDN(内容分发网络：通过中心平台的负载均衡、内容分发、调度等使用户获取就近内容)")]),t._v(" "),n("li",[t._v("SSR服务端渲染：将网页和数据一起加载一起渲染；（减少网络请求）"),n("br"),t._v("\n非SSR（前后端分离）：先加载网页，再加载数据，再渲染数据")]),t._v(" "),n("li",[t._v("懒加载：前面图片加载完，后面的慢慢加载完"),n("br"),t._v("\n给图片先设置一个默认的小的预览图片，真正的放在data-realsrc里面，当浏览器判断到上滑浏览到图片露出屏幕（dom设置）时候再加载"),n("br"),t._v("\nvue中可以用is")]),t._v(" "),n("li",[t._v("防抖、节流"),n("br"),t._v("\n防抖:拖拽一个元素时，要实时拿到当前元素的位置，如果直接用drag事件频繁触发会卡顿,所以一段时间后一起触发"),n("br"),t._v("\n节流：无论拖拽速度多快，每100ms触发一次")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//封装防抖")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("debounce")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" delay "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" timer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//注意是在闭包中")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//函数作为返回值就形成闭包了")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("itmer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    timer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("arguments"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      timer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("delay"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\ninput1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'keyup'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("debounce")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("input1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("600")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//封装节流")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("throttle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("fn"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" delay "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" timer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timer"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    timer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("arguments"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      timer "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("delay"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\ndiv1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("addEventListener")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'drag'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("throttle")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetX"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("e"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("offsetY"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("ul",[n("li",[t._v("webpack优化\n"),n("strong",[t._v("【优化打包构建速度 - 开发体验和效率】")]),t._v("\n1️⃣优化babel - loader")])]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    test"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token regex"}},[n("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\.js$")]),n("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    use"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("‘babel"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("loader"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v("cacheDirectory"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//开启缓存. 【es6代码没有改代码的就不会重新编译就会缓存一下】")]),t._v("\n    include"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("path"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("__dirname "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("’src’"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//排除范围include 和exculde两者选一个即可")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//exclude:path.resolve(__dirname,’node_modules')")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("2️⃣IgnorePlugin避免引入无用模块"),n("br"),t._v("\n比如引入moment只使用中文，避免引入过多语言")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//plugin")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("webpack"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("IgnorePlugin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token regex"}},[n("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("\\.\\/locale")]),n("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),n("span",{pre:!0,attrs:{class:"token regex"}},[n("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("moment")]),n("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//忽略moment下的/local目录")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//js文件中")]),t._v("\nImport ‘moment"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("local"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("zh"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("cn’"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//手动引入中文语言包")]),t._v("\n")])])]),n("p",[t._v("3️⃣noParse避免重复打包")]),t._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("Module"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    module"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//读完整的react.min.js文件就没有采用模块化")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//忽略对react.min.js文件的递归解析处理")]),t._v("\n        noParse"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token regex"}},[n("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),n("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("react\\.min\\.js$")]),n("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("  【这种基本上已经是采用模块化处理过的，不用再打包，只要检查到这个就不会去打包】\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("IgnorePlugin直接不引入，代码中没有，需要什么自己去引"),n("br"),t._v("\nnoParse引入，但不打包.   【都既优化了打包速度又优化了产出体积】"),n("br"),t._v("\n4️⃣happyPack 多进程打包"),n("br"),t._v("\nJs单线程，开启多进程打包"),n("br"),t._v("\n提高构建速度（特别是多核CPU）"),n("br"),t._v("\nconst HappyPack = require(‘happypack’)\n"),n("img",{attrs:{src:a(431),alt:"示例"}}),t._v("\n5️⃣ParallelUglifyPlugin多进程压缩js"),n("br"),t._v("\nwebpack内置Uglify工具压缩js"),n("br"),t._v("\njs单进程，开启多进程压缩更快"),n("br"),t._v("\n原理和happyPack同理"),n("br"),t._v("\n插件const ParallelUglifyPlugin = require(‘webpack-parallel-uglify-plugin’)"),n("br"),t._v(" "),n("img",{attrs:{src:a(432),alt:"示例"}}),n("br"),t._v("\n关于开启多进程：\n项目比较大，打包较慢，开启多进程能提高速度\n项目比较小，打包很快，开启多进程会降低速度（进程开销）\n☞自动刷新\n☞热更新\n☞DllPlugin")]),t._v(" "),n("ul",[n("li",[t._v("vue优化\n1️⃣合理使用v-show if\\合理使用computed\\v-for加key\\及时销毁\\合理使用异步组件\\合理使用keep-alive\\data层级不要太深"),n("br"),t._v("\n2️⃣使用vue-loader在开发环境做模版编译（预编译）")]),t._v(" "),n("li",[t._v("React优化\n1️⃣在constructor构造器中bind（this）比较好，这样无论点击多少次都只bind一次；"),n("br"),t._v("\n如果是在render里面绑定，每点击一次都需要重新bind都要重新返回一个新的函数【效率不好】"),n("br"),t._v("\n2️⃣React-fiber如何性能优化"),n("br"),t._v("\npatch比较在React中被拆分为两个阶段：")])]),t._v(" "),n("ul",[n("li",[t._v("reconciliation阶段-执行diff算法，纯JS计算")]),t._v(" "),n("li",[t._v("commit阶段-将diff结果渲染到DOM"),n("br"),t._v("\n原因：js是单线程，且和DOM渲染共用一个线程，当组件足够复杂，组件更新时计算和渲染压力都很大，同时再有dom操作会卡顿"),n("br"),t._v("\nfiber【内部运行机制】将recociliation阶段进行任务拆分（commit无法拆分）"),n("br"),t._v("\nDOM需要渲染时暂停，空闲时恢复"),n("br"),t._v("\n通过window.requestidleCallback这个API来判断什么时候DOM渲染")])]),t._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[t._v("tcp与udp的区别")])]),t._v(" "),n("ul",[n("li",[t._v("tcp "),n("strong",[t._v("面向连接")]),n("br"),t._v("\n1、在收发数据的时候，必须和对方建立可靠的连接【三次握手】【四次挥手】"),n("br"),t._v("\n三次握手过程中，没有应用层的数据 ,SYN这个标志位只有在TCP建立连接时才会被置1 ,握手完成后SYN标志位被置0。"),n("br"),t._v("\n备注：\n（1）ACK：是TCP报头的控制位之一，对数据进行确认。确认由目的端发出， 用它来告诉发送端这个序列号之前的数据段都收到了。 比如确认号为X，则表示前X-1个数据段都收到了，只有当ACK=1时,确认号才有效，当ACK=0时，确认号无效，这时会要求重传数据，保证数据的完整性。"),n("br"),t._v("\n（2）SYN：同步序列号，TCP建立连接时将这个位置1。"),n("br"),t._v("\n（3）FIN：发送端完成发送任务位，当TCP完成数据传输需要断开时,，提出断开连接的一方将这位置1。"),n("br"),t._v("\n2、TCP包头的最小长度，为20字节。\n3、一对一连接")]),t._v(" "),n("li",[t._v("udp "),n("strong",[t._v("面向报文")]),n("br"),t._v("\n1、传输数据之前源端和终端不建立连接， 简单地去抓取来自应用程序的数据，并"),n("strong",[t._v("尽可能快")]),t._v("地把它扔到网络上。\n2、不需要维护连接状态，包括收发状态等， 因此"),n("strong",[t._v("一台服务机可同时向多个客户机")]),t._v("传输相同的消息。\n3、UDP信息包的标题很短，只有8个字节，相对于TCP的20个字节信息包的额外开销很小。\n4、吞吐量不受拥挤控制算法的调节，只受应用软件生成数据的速率、传输带宽、 源端和终端主机性能的限制。\n5、UDP使用尽最大努力交付，"),n("strong",[t._v("即不保证可靠交付")]),t._v("， 因此主机不需要维持复杂的链接状态表（这里面有许多参数）。\n6、UDP是面向报文的。发送方的UDP对应用程序交下来的报文， 在添加首部后就向下交付给IP层。既不拆分，也不合并，而是保留这些报文的边界， 因此，应用程序需要选择合适的报文大小。\n"),n("strong",[t._v("【总的来说】")]),t._v("\n1、基于连接与无连接；"),n("br"),t._v("\n2、对系统资源的要求（TCP较多，UDP少）；"),n("br"),t._v("\n3、UDP程序结构较简单；"),n("br"),t._v("\n4、流模式与数据报模式 ；"),n("br"),t._v("\n5、TCP保证数据正确性，UDP可能丢包；"),n("br"),t._v("\n6、TCP保证数据顺序，UDP不保证")])]),t._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[t._v("get和post的区别"),n("br"),t._v("\nGET 向服务器获取指定资源\nPOST 向服务器提交数据，数据放在请求体里\nGET 用于获取信息，是无副作用的，是幂等的，且可缓存， 而POST 用于修改服务器上的数据，有副作用，非幂等，不可缓存。")]),t._v(" "),n("li",[t._v("为什么需要初始化css样式")])]),t._v(" "),n("ul",[n("li",[t._v("兼容问题，不同浏览器对有些标签的默认值是不同的，如果没对CSS初始化往往会出现浏览器之间的页面显示差异。")]),t._v(" "),n("li",[t._v("提高编码质量，可能重复的CSS样式很多。去掉标签的默认样式如：margin,padding，其他浏览器默认解析字体大小，字体设置。")])]),t._v(" "),n("ol",{attrs:{start:"5"}},[n("li",[t._v("Dom事件有哪些阶段")])]),t._v(" "),n("ul",[n("li",[t._v("从文档的根节点流向目标对象（捕获阶段）\n事件从文档的根节点出发，随着DOM树的结构向事件的目标节点流去。途中经过各个层次的DOM节点，并在各节点上触发捕获事件，直到到达事件的目标节点。捕获阶段的主要任务是"),n("strong",[t._v("建立传播路径")]),t._v("，在冒泡阶段，事件会通过这个路径回溯到文档跟节点。当事件发生时，首先发生的是事件捕获，"),n("strong",[t._v("为父元素截获事件提供了机会。")])]),t._v(" "),n("li",[t._v("然后在目标对向上被触发（目标阶段）")]),t._v(" "),n("li",[t._v("之后再回溯到文档的根节点（冒泡阶段）.")])]),t._v(" "),n("ol",{attrs:{start:"6"}},[n("li",[t._v("描述cookie与session\ncookie")])]),t._v(" "),n("ul",[n("li",[t._v("存储在浏览器的一段字符串（最大5kb）")]),t._v(" "),n("li",[t._v("跨域不共享")]),t._v(" "),n("li",[t._v("是结构化数据 key=value;")]),t._v(" "),n("li",[t._v("每次发送http请求，会将请求域的cookie一起发送给server")]),t._v(" "),n("li",[t._v("server端可以修改cookie并返回给浏览器")]),t._v(" "),n("li",[t._v("浏览器中也可以通过javascript修改cookie（有限制）")]),t._v(" "),n("li",[t._v("客户端可以累加cookie")]),t._v(" "),n("li",[t._v("cookie跨域不共享"),n("br"),t._v("\nsession")]),t._v(" "),n("li",[t._v("存储会话信息(存储特定用户会话所需的属性和配置信息)"),n("br"),t._v("\nsession是一种解决问题的方法，cookie存储数据大小有限，可以在cookie中存储userId（随机字符串），然后通过userId读取session中的username等信息"),n("br"),t._v("\n如果cookie中没有userId,先设置一个标志，需要生成新的cookie；如果没有session内容，先初始化一个空对象\nreq.session = SESSION_DATA[userId]"),n("br"),t._v("\nSESSION_DATA为后端的一个JS变量，存储在进程被操作系统分配的内存中")])]),t._v(" "),n("ol",{attrs:{start:"7"}},[n("li",[t._v("less与sass")])]),t._v(" "),n("p",[t._v("css无法嵌套书写，可能导致需要使用很多选择器，同时也没有合理的变量样式复用机制。")]),t._v(" "),n("p",[t._v("而less和sass都是动态语言样式，之后都需要通过编译器转换为css文件，less是通过客户端处理的，sass是需要服务端处理。")]),t._v(" "),n("p",[t._v("less和css对css赋予了动态语言的特性，比如变量和函数。")]),t._v(" "),n("p",[t._v("less使用@，sass使用$。less中{}内定义的变量为局部变量,外面定义的是全局变量。sass3.4.0之前的版本没有局部变量，如果在局部中声明了之前的同名变量，会覆盖掉全局的变量内容，3.4.0之后升级，全局变量不会被重写，除非同名的局部变量被声明时使用!defalut")]),t._v(" "),n("p",[t._v("sass对条件语句和循环语句的处理要比less语言强大。具有真正的语言处理能力。")]),t._v(" "),n("ol",{attrs:{start:"8"}},[n("li",[t._v("如何添加水印")])]),t._v(" "),n("p",[t._v("创建一个画布，给画布设置宽高并且旋转一定的角度，然后设置文本的样式和对齐方式，再在画布上绘制文本，设置内容与横竖坐标")]),t._v(" "),n("p",[t._v("之后再创建一个div，把z-index调高，设置一下透明度，再把画布toDataUrl放置到div的背景上，设置左上角开始repeat")]),t._v(" "),n("ol",{attrs:{start:"9"}},[n("li",[t._v("优化")])]),t._v(" "),n("p",[t._v("前端优化主要是减少CPU计算与网络加载耗时")]),t._v(" "),n("p",[t._v("1⃣️减少DOM操作，可以对DOM的查询做缓存，下一次再需要从缓存里拿。也可以将频繁的DOM操作改为一次性的操作，比如使用document.createDocumentFragmenty创建文档碎片，最后一同插入节点")]),t._v(" "),n("p",[t._v("2⃣️为了减少网络请求可以进行资源的合并、压缩。")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("在资源合并方面，可以对公共库的js代码进行合并，这样改变了业务代码不会影响公共库的js的缓存。同时在打包的时候使用[contenthash] ，文件内容不变哈希值不变可以命中缓存。")])]),t._v(" "),n("li",[n("p",[t._v("请求的时候也可以使用CDN加快速度，")])]),t._v(" "),n("li",[n("p",[t._v("在资源压缩方面，可以开启http的gzip压缩，浏览器需要先告诉服务器支持gzip压缩，服务器压缩后浏览器解开。")])]),t._v(" "),n("li",[n("p",[t._v("可以使用插件 ParallelUglifyPlugin 多进程 JS 代码")])]),t._v(" "),n("li",[n("p",[t._v("webpack还可以使用babel-loader 开启缓存，es6代码没有改代码的就不不会重新编译就会缓存")])]),t._v(" "),n("li",[n("p",[t._v("也可以避免引入无用的模块，比如忽略moment下的语言包，再手动引入中文。")])])]),t._v(" "),n("p",[t._v("3⃣️其他在开发功能的时候，也可以添加防抖节流、懒加载")]),t._v(" "),n("p",[t._v("4⃣️在React中可以在constructor构造器器中bind(this)⽐比较好，这样⽆无论点击多少次都只bind⼀一次;")]),t._v(" "),n("p",[t._v("如果是在render⾥面绑定，每点击⼀一次都需要重新bind都要重新返回⼀一个新的函数")]),t._v(" "),n("p",[t._v("（抽离公共逻辑**/"),n("strong",[t._v("第三方库：可以设置")]),t._v("optimization**,里面可以设置分隔代码块，可以进行缓存分组。可以输出vendor,test匹配node_modules，也可以设置抽离的优先级）")]),t._v(" "),n("ol",{attrs:{start:"10"}},[n("li",[n("p",[t._v("ES6新增特性：let \\ const \\箭头函数、字符串模板``、Array.from 等、Symbol、set集合和Map集合、class、Promise")])]),t._v(" "),n("li",[n("p",[t._v("gitflow工作流是什么")]),t._v(" "),n("ul",[n("li",[t._v("Gitflow工作流通过为功能开发、发布准备和维护 分配独立的分支，让发布迭代过程更流畅。严格的"),n("strong",[t._v("分支模型")]),t._v("也为大型项目提供了一些非常必要的结构")]),t._v(" "),n("li",[t._v("master分支存储了正式发布的历史，而develop分支作为功能的集成分支，新功能提交应该从不直接与master分支交互")]),t._v(" "),n("li",[t._v("develop分支上checkout一个发布分支，这个分支只应该做Bug修复、文档生成和其它面向发布任务。 发布分支合并到master分支并分配一个版本号打好Tag。")]),t._v(" "),n("li",[t._v("维护分支或说是热修复（hotfix）分支用于生成快速给产品发布版本（production releases）打补丁， 这是唯一可以直接从master分支fork出来的分支")])])])]),t._v(" "),n("p",[t._v("12.websocket")]),t._v(" "),n("p",[t._v("实时视频聊天是整个平台最大的技术难点。对于患者，当他开始对欲申请通话请求的医生发送请求时，他首先会通过mediaDevices.getUserMedia获取摄像头及音频流Stream，来查看目前自己的形象，也方便之后与医生通话时将自己的影像传给对应医生。当他点击“通过”之后，会通过callUser的方法将需要通话的医生和自己的ID信息和视频数据传到服务端，再由服务端传给医生。当医生选择同意通话以后，患者会受到callAccepted指令，网站会跳转到咨询室，并将医生的音视频流作为视频的形式播放出来。如图4-1 视频聊天中客户端与服务端的交互（患者视角）。")])])}),[],!1,null,null,null);s.default=e.exports}}]);